const sg = @import("sokol").gfx;
const std = @import("std");
const zm = @import("zmath");
//
//    #version:1# (machine generated, don't edit!)
//
//    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)
//
//    Cmdline:
//        sokol-shdc -i .\game\shader\batch.glsl -o .\game\shader\batch.glsl.zig -l glsl410:metal_macos:hlsl5:glsl300es:wgsl -f sokol_zig --reflection
//
//    Overview:
//    =========
//    Shader program: 'batch':
//        Get shader desc: shd.batchShaderDesc(sg.queryBackend());
//        Vertex Shader: vs
//        Fragment Shader: fs
//        Attributes:
//    Bindings:
//        Uniform block 'vs_params':
//            Zig struct: VsParams
//            Bind slot: UB_vs_params => 0
//        Storage buffer 'SSBO':
//            Zig struct: Ssbo
//            Bind slot: SBUF_SSBO => 0
//        Image 'tex':
//            Image type: ._2D
//            Sample type: .FLOAT
//            Multisampled: false
//            Bind slot: IMG_tex => 0
//        Sampler 'smp':
//            Type: .FILTERING
//            Bind slot: SMP_smp => 0
//
pub const UB_vs_params = 0;
pub const SBUF_SSBO = 0;
pub const IMG_tex = 0;
pub const SMP_smp = 0;
pub const VsParams = extern struct {
    vp: zm.Mat align(16),
};
pub const Batchinstance = extern struct {
    position: zm.Vec align(16),
    width: f32 align(1),
    height: f32 align(1),
    rotation: f32 align(1),
    padding: f32 align(1),
    texcoord: zm.Vec align(1),
    color: zm.Vec align(1),
};
//
//    #version 410
//
//    const uint _21[6] = uint[](0u, 1u, 2u, 3u, 2u, 1u);
//
//    struct BatchInstance
//    {
//        vec4 position;
//        float width;
//        float height;
//        float rotation;
//        float padding;
//        vec4 texcoord;
//        vec4 color;
//    };
//
//    const vec2 _123[4] = vec2[](vec2(0.0), vec2(1.0, 0.0), vec2(0.0, 1.0), vec2(1.0));
//
//    layout(std430) readonly buffer SSBO
//    {
//        BatchInstance dataBuffer[];
//    } _37;
//
//    uniform vec4 vs_params[4];
//    layout(location = 0) out vec4 color;
//    layout(location = 1) out vec2 uv;
//
//    void main()
//    {
//        uint _13 = uint(gl_VertexID);
//        uint _23 = _13 % 6u;
//        uint _40 = _13 / 6u;
//        float _83 = _37.dataBuffer[_40].texcoord.x + _37.dataBuffer[_40].texcoord.z;
//        float _93 = _37.dataBuffer[_40].texcoord.y + _37.dataBuffer[_40].texcoord.w;
//        vec2 texcoord[4] = vec2[](vec2(_37.dataBuffer[_40].texcoord.xy), vec2(_83, _37.dataBuffer[_40].texcoord.y), vec2(_37.dataBuffer[_40].texcoord.x, _93), vec2(_83, _93));
//        float _110 = cos(_37.dataBuffer[_40].rotation);
//        float _114 = sin(_37.dataBuffer[_40].rotation);
//        gl_Position = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * vec4(((_123[_21[_23]] * vec2(_37.dataBuffer[_40].width, _37.dataBuffer[_40].height)) * mat2(vec2(_110, -_114), vec2(_114, _110))) + _37.dataBuffer[_40].position.xy, _37.dataBuffer[_40].position.z, 1.0);
//        color = _37.dataBuffer[_40].color;
//        uv = texcoord[_21[_23]];
//    }
//
//
const vs_source_glsl410 = [1375]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x63,0x6f,
    0x6e,0x73,0x74,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x31,0x5b,0x36,0x5d,0x20,
    0x3d,0x20,0x75,0x69,0x6e,0x74,0x5b,0x5d,0x28,0x30,0x75,0x2c,0x20,0x31,0x75,0x2c,
    0x20,0x32,0x75,0x2c,0x20,0x33,0x75,0x2c,0x20,0x32,0x75,0x2c,0x20,0x31,0x75,0x29,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x42,0x61,0x74,0x63,0x68,0x49,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x34,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x77,0x69,0x64,0x74,0x68,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x68,0x65,0x69,0x67,0x68,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,0x74,0x61,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x64,0x64,0x69,0x6e,0x67,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,
    0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x63,0x6f,
    0x6e,0x73,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x31,0x32,0x33,0x5b,0x34,0x5d,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x5b,0x5d,0x28,0x76,0x65,0x63,0x32,0x28,0x30,
    0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x29,0x3b,
    0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x73,0x74,0x64,0x34,0x33,0x30,0x29,
    0x20,0x72,0x65,0x61,0x64,0x6f,0x6e,0x6c,0x79,0x20,0x62,0x75,0x66,0x66,0x65,0x72,
    0x20,0x53,0x53,0x42,0x4f,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x42,0x61,0x74,0x63,
    0x68,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x20,0x64,0x61,0x74,0x61,0x42,0x75,
    0x66,0x66,0x65,0x72,0x5b,0x5d,0x3b,0x0a,0x7d,0x20,0x5f,0x33,0x37,0x3b,0x0a,0x0a,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,
    0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x31,0x33,0x20,0x3d,0x20,
    0x75,0x69,0x6e,0x74,0x28,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x44,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x20,
    0x3d,0x20,0x5f,0x31,0x33,0x20,0x25,0x20,0x36,0x75,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x75,0x69,0x6e,0x74,0x20,0x5f,0x34,0x30,0x20,0x3d,0x20,0x5f,0x31,0x33,0x20,0x2f,
    0x20,0x36,0x75,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x38,0x33,0x20,0x3d,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,
    0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,
    0x64,0x2e,0x78,0x20,0x2b,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,
    0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,
    0x72,0x64,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x39,0x33,0x20,0x3d,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,
    0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,
    0x72,0x64,0x2e,0x79,0x20,0x2b,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,
    0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,
    0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x5b,0x34,0x5d,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x32,0x5b,0x5d,0x28,0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,
    0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,
    0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,
    0x28,0x5f,0x38,0x33,0x2c,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,
    0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,
    0x72,0x64,0x2e,0x79,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x37,0x2e,
    0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,
    0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x2c,0x20,0x5f,0x39,0x33,0x29,
    0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x38,0x33,0x2c,0x20,0x5f,0x39,0x33,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,
    0x30,0x20,0x3d,0x20,0x63,0x6f,0x73,0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,
    0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x72,0x6f,0x74,0x61,
    0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x31,0x31,0x34,0x20,0x3d,0x20,0x73,0x69,0x6e,0x28,0x5f,0x33,0x37,0x2e,
    0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,
    0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,
    0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,
    0x28,0x28,0x28,0x5f,0x31,0x32,0x33,0x5b,0x5f,0x32,0x31,0x5b,0x5f,0x32,0x33,0x5d,
    0x5d,0x20,0x2a,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,
    0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x77,0x69,0x64,
    0x74,0x68,0x2c,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,
    0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x68,0x65,0x69,0x67,0x68,0x74,0x29,0x29,
    0x20,0x2a,0x20,0x6d,0x61,0x74,0x32,0x28,0x76,0x65,0x63,0x32,0x28,0x5f,0x31,0x31,
    0x30,0x2c,0x20,0x2d,0x5f,0x31,0x31,0x34,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,
    0x5f,0x31,0x31,0x34,0x2c,0x20,0x5f,0x31,0x31,0x30,0x29,0x29,0x29,0x20,0x2b,0x20,
    0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,
    0x34,0x30,0x5d,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x79,0x2c,
    0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,
    0x5f,0x34,0x30,0x5d,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,
    0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x5b,
    0x5f,0x32,0x31,0x5b,0x5f,0x32,0x33,0x5d,0x5d,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #version 410
//
//    uniform sampler2D tex_smp;
//
//    layout(location = 0) out vec4 frag_color;
//    layout(location = 1) in vec2 uv;
//    layout(location = 0) in vec4 color;
//
//    void main()
//    {
//        frag_color = texture(tex_smp, uv) * color;
//    }
//
//
const fs_source_glsl410 = [219]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,
    0x74,0x65,0x78,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,
    0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,
    0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x74,0x65,0x78,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,0x20,0x2a,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #version 300 es
//
//    const uint _21[6] = uint[](0u, 1u, 2u, 3u, 2u, 1u);
//
//    struct BatchInstance
//    {
//        vec4 position;
//        float width;
//        float height;
//        float rotation;
//        float padding;
//        vec4 texcoord;
//        vec4 color;
//    };
//
//    const vec2 _123[4] = vec2[](vec2(0.0), vec2(1.0, 0.0), vec2(0.0, 1.0), vec2(1.0));
//
//    layout(std430) readonly buffer SSBO
//    {
//        BatchInstance dataBuffer[];
//    } _37;
//
//    uniform vec4 vs_params[4];
//    out vec4 color;
//    out vec2 uv;
//
//    void main()
//    {
//        uint _13 = uint(gl_VertexID);
//        uint _23 = _13 % 6u;
//        uint _40 = _13 / 6u;
//        float _83 = _37.dataBuffer[_40].texcoord.x + _37.dataBuffer[_40].texcoord.z;
//        float _93 = _37.dataBuffer[_40].texcoord.y + _37.dataBuffer[_40].texcoord.w;
//        vec2 texcoord[4] = vec2[](vec2(_37.dataBuffer[_40].texcoord.xy), vec2(_83, _37.dataBuffer[_40].texcoord.y), vec2(_37.dataBuffer[_40].texcoord.x, _93), vec2(_83, _93));
//        float _110 = cos(_37.dataBuffer[_40].rotation);
//        float _114 = sin(_37.dataBuffer[_40].rotation);
//        gl_Position = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * vec4(((_123[_21[_23]] * vec2(_37.dataBuffer[_40].width, _37.dataBuffer[_40].height)) * mat2(vec2(_110, -_114), vec2(_114, _110))) + _37.dataBuffer[_40].position.xy, _37.dataBuffer[_40].position.z, 1.0);
//        color = _37.dataBuffer[_40].color;
//        uv = texcoord[_21[_23]];
//    }
//
//
const vs_source_glsl300es = [1336]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x63,0x6f,0x6e,0x73,0x74,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x31,0x5b,
    0x36,0x5d,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x5b,0x5d,0x28,0x30,0x75,0x2c,0x20,
    0x31,0x75,0x2c,0x20,0x32,0x75,0x2c,0x20,0x33,0x75,0x2c,0x20,0x32,0x75,0x2c,0x20,
    0x31,0x75,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x42,0x61,0x74,
    0x63,0x68,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x77,0x69,0x64,0x74,0x68,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x68,0x65,0x69,0x67,0x68,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,0x74,
    0x61,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x64,0x64,0x69,0x6e,0x67,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x34,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x63,0x6f,0x6e,0x73,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x31,0x32,0x33,
    0x5b,0x34,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x5b,0x5d,0x28,0x76,0x65,0x63,
    0x32,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,
    0x29,0x29,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x73,0x74,0x64,0x34,
    0x33,0x30,0x29,0x20,0x72,0x65,0x61,0x64,0x6f,0x6e,0x6c,0x79,0x20,0x62,0x75,0x66,
    0x66,0x65,0x72,0x20,0x53,0x53,0x42,0x4f,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x42,
    0x61,0x74,0x63,0x68,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x20,0x64,0x61,0x74,
    0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5d,0x3b,0x0a,0x7d,0x20,0x5f,0x33,0x37,
    0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,
    0x6e,0x74,0x20,0x5f,0x31,0x33,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x67,0x6c,
    0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x44,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x20,0x3d,0x20,0x5f,0x31,0x33,0x20,0x25,
    0x20,0x36,0x75,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x34,
    0x30,0x20,0x3d,0x20,0x5f,0x31,0x33,0x20,0x2f,0x20,0x36,0x75,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x33,0x20,0x3d,0x20,0x5f,0x33,
    0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,
    0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x20,0x2b,0x20,0x5f,
    0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,
    0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x33,0x20,0x3d,0x20,0x5f,
    0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,
    0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x20,0x2b,0x20,
    0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,
    0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x77,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,
    0x64,0x5b,0x34,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x5b,0x5d,0x28,0x76,0x65,
    0x63,0x32,0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,
    0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,
    0x78,0x79,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x38,0x33,0x2c,0x20,0x5f,
    0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,
    0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x29,0x2c,0x20,
    0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,
    0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,
    0x64,0x2e,0x78,0x2c,0x20,0x5f,0x39,0x33,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,
    0x5f,0x38,0x33,0x2c,0x20,0x5f,0x39,0x33,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x30,0x20,0x3d,0x20,0x63,0x6f,0x73,
    0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,
    0x5f,0x34,0x30,0x5d,0x2e,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x34,0x20,0x3d,
    0x20,0x73,0x69,0x6e,0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,
    0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,
    0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,
    0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x28,0x5f,0x31,0x32,0x33,
    0x5b,0x5f,0x32,0x31,0x5b,0x5f,0x32,0x33,0x5d,0x5d,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x32,0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,
    0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x77,0x69,0x64,0x74,0x68,0x2c,0x20,0x5f,0x33,0x37,
    0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,
    0x2e,0x68,0x65,0x69,0x67,0x68,0x74,0x29,0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,0x32,
    0x28,0x76,0x65,0x63,0x32,0x28,0x5f,0x31,0x31,0x30,0x2c,0x20,0x2d,0x5f,0x31,0x31,
    0x34,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x31,0x31,0x34,0x2c,0x20,0x5f,
    0x31,0x31,0x30,0x29,0x29,0x29,0x20,0x2b,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,
    0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x79,0x2c,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,
    0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x33,0x37,0x2e,
    0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,
    0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x5b,0x5f,0x32,0x31,0x5b,0x5f,0x32,0x33,
    0x5d,0x5d,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #version 300 es
//    precision mediump float;
//    precision highp int;
//
//    uniform highp sampler2D tex_smp;
//
//    layout(location = 0) out highp vec4 frag_color;
//    in highp vec2 uv;
//    in highp vec4 color;
//
//    void main()
//    {
//        frag_color = texture(tex_smp, uv) * color;
//    }
//
//
const fs_source_glsl300es = [250]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x65,0x78,0x5f,0x73,0x6d,0x70,0x3b,0x0a,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x75,
    0x76,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,
    0x74,0x65,0x78,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,0x20,0x2a,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    struct BatchInstance
//    {
//        float4 position;
//        float width;
//        float height;
//        float rotation;
//        float padding;
//        float4 texcoord;
//        float4 color;
//    };
//
//    static const uint _21[6] = { 0u, 1u, 2u, 3u, 2u, 1u };
//    static const float2 _123[4] = { 0.0f.xx, float2(1.0f, 0.0f), float2(0.0f, 1.0f), 1.0f.xx };
//
//    ByteAddressBuffer _37 : register(t16);
//    cbuffer vs_params : register(b0)
//    {
//        row_major float4x4 _169_vp : packoffset(c0);
//    };
//
//
//    static float4 gl_Position;
//    static int gl_VertexIndex;
//    static float4 color;
//    static float2 uv;
//
//    struct SPIRV_Cross_Input
//    {
//        uint gl_VertexIndex : SV_VertexID;
//    };
//
//    struct SPIRV_Cross_Output
//    {
//        float4 color : TEXCOORD0;
//        float2 uv : TEXCOORD1;
//        float4 gl_Position : SV_Position;
//    };
//
//    void vert_main()
//    {
//        uint _13 = uint(gl_VertexIndex);
//        uint _23 = _13 % 6u;
//        BatchInstance _43;
//        _43.position = asfloat(_37.Load4((_13 / 6u) * 64 + 0));
//        _43.width = asfloat(_37.Load((_13 / 6u) * 64 + 16));
//        _43.height = asfloat(_37.Load((_13 / 6u) * 64 + 20));
//        _43.rotation = asfloat(_37.Load((_13 / 6u) * 64 + 24));
//        _43.padding = asfloat(_37.Load((_13 / 6u) * 64 + 28));
//        _43.texcoord = asfloat(_37.Load4((_13 / 6u) * 64 + 32));
//        _43.color = asfloat(_37.Load4((_13 / 6u) * 64 + 48));
//        float _83 = _43.texcoord.x + _43.texcoord.z;
//        float _93 = _43.texcoord.y + _43.texcoord.w;
//        float2 _106[4] = { float2(_43.texcoord.xy), float2(_83, _43.texcoord.y), float2(_43.texcoord.x, _93), float2(_83, _93) };
//        float2 texcoord[4] = _106;
//        float _110 = cos(_43.rotation);
//        float _114 = sin(_43.rotation);
//        gl_Position = mul(float4(mul(float2x2(float2(_110, -_114), float2(_114, _110)), _123[_21[_23]] * float2(_43.width, _43.height)) + _43.position.xy, _43.position.z, 1.0f), _169_vp);
//        color = _43.color;
//        uv = texcoord[_21[_23]];
//    }
//
//    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
//    {
//        gl_VertexIndex = int(stage_input.gl_VertexIndex);
//        vert_main();
//        SPIRV_Cross_Output stage_output;
//        stage_output.gl_Position = gl_Position;
//        stage_output.color = color;
//        stage_output.uv = uv;
//        return stage_output;
//    }
//
const vs_source_hlsl5 = [2106]u8 {
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x42,0x61,0x74,0x63,0x68,0x49,0x6e,0x73,0x74,
    0x61,0x6e,0x63,0x65,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x77,0x69,0x64,0x74,0x68,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x68,0x65,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x64,
    0x64,0x69,0x6e,0x67,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x75,0x69,
    0x6e,0x74,0x20,0x5f,0x32,0x31,0x5b,0x36,0x5d,0x20,0x3d,0x20,0x7b,0x20,0x30,0x75,
    0x2c,0x20,0x31,0x75,0x2c,0x20,0x32,0x75,0x2c,0x20,0x33,0x75,0x2c,0x20,0x32,0x75,
    0x2c,0x20,0x31,0x75,0x20,0x7d,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x31,0x32,0x33,
    0x5b,0x34,0x5d,0x20,0x3d,0x20,0x7b,0x20,0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,
    0x30,0x66,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x30,0x2e,0x30,0x66,
    0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,
    0x20,0x7d,0x3b,0x0a,0x0a,0x42,0x79,0x74,0x65,0x41,0x64,0x64,0x72,0x65,0x73,0x73,
    0x42,0x75,0x66,0x66,0x65,0x72,0x20,0x5f,0x33,0x37,0x20,0x3a,0x20,0x72,0x65,0x67,
    0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x31,0x36,0x29,0x3b,0x0a,0x63,0x62,0x75,0x66,
    0x66,0x65,0x72,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,0x20,
    0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x31,0x36,0x39,0x5f,0x76,0x70,0x20,0x3a,0x20,
    0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x74,0x20,0x67,0x6c,0x5f,0x56,0x65,
    0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,
    0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,
    0x49,0x6e,0x64,0x65,0x78,0x20,0x3a,0x20,0x53,0x56,0x5f,0x56,0x65,0x72,0x74,0x65,
    0x78,0x49,0x44,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,
    0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,
    0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,
    0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x69,0x6e,0x74,0x20,0x5f,0x31,0x33,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x67,
    0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x20,0x3d,0x20,0x5f,
    0x31,0x33,0x20,0x25,0x20,0x36,0x75,0x3b,0x0a,0x20,0x20,0x20,0x20,0x42,0x61,0x74,
    0x63,0x68,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x20,0x5f,0x34,0x33,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x5f,0x34,0x33,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x61,0x73,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x33,0x37,0x2e,0x4c,
    0x6f,0x61,0x64,0x34,0x28,0x28,0x5f,0x31,0x33,0x20,0x2f,0x20,0x36,0x75,0x29,0x20,
    0x2a,0x20,0x36,0x34,0x20,0x2b,0x20,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x5f,0x34,0x33,0x2e,0x77,0x69,0x64,0x74,0x68,0x20,0x3d,0x20,0x61,0x73,0x66,0x6c,
    0x6f,0x61,0x74,0x28,0x5f,0x33,0x37,0x2e,0x4c,0x6f,0x61,0x64,0x28,0x28,0x5f,0x31,
    0x33,0x20,0x2f,0x20,0x36,0x75,0x29,0x20,0x2a,0x20,0x36,0x34,0x20,0x2b,0x20,0x31,
    0x36,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,0x33,0x2e,0x68,0x65,0x69,
    0x67,0x68,0x74,0x20,0x3d,0x20,0x61,0x73,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x33,
    0x37,0x2e,0x4c,0x6f,0x61,0x64,0x28,0x28,0x5f,0x31,0x33,0x20,0x2f,0x20,0x36,0x75,
    0x29,0x20,0x2a,0x20,0x36,0x34,0x20,0x2b,0x20,0x32,0x30,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x5f,0x34,0x33,0x2e,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x61,0x73,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x33,0x37,0x2e,0x4c,0x6f,
    0x61,0x64,0x28,0x28,0x5f,0x31,0x33,0x20,0x2f,0x20,0x36,0x75,0x29,0x20,0x2a,0x20,
    0x36,0x34,0x20,0x2b,0x20,0x32,0x34,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,
    0x34,0x33,0x2e,0x70,0x61,0x64,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x61,0x73,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x5f,0x33,0x37,0x2e,0x4c,0x6f,0x61,0x64,0x28,0x28,0x5f,
    0x31,0x33,0x20,0x2f,0x20,0x36,0x75,0x29,0x20,0x2a,0x20,0x36,0x34,0x20,0x2b,0x20,
    0x32,0x38,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,0x33,0x2e,0x74,0x65,
    0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x61,0x73,0x66,0x6c,0x6f,0x61,0x74,
    0x28,0x5f,0x33,0x37,0x2e,0x4c,0x6f,0x61,0x64,0x34,0x28,0x28,0x5f,0x31,0x33,0x20,
    0x2f,0x20,0x36,0x75,0x29,0x20,0x2a,0x20,0x36,0x34,0x20,0x2b,0x20,0x33,0x32,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,0x33,0x2e,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x61,0x73,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x33,0x37,0x2e,0x4c,
    0x6f,0x61,0x64,0x34,0x28,0x28,0x5f,0x31,0x33,0x20,0x2f,0x20,0x36,0x75,0x29,0x20,
    0x2a,0x20,0x36,0x34,0x20,0x2b,0x20,0x34,0x38,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x33,0x20,0x3d,0x20,0x5f,0x34,0x33,
    0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x20,0x2b,0x20,0x5f,0x34,
    0x33,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x33,0x20,0x3d,0x20,0x5f,0x34,
    0x33,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x20,0x2b,0x20,0x5f,
    0x34,0x33,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x77,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x31,0x30,0x36,0x5b,0x34,
    0x5d,0x20,0x3d,0x20,0x7b,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x34,0x33,
    0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x29,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x38,0x33,0x2c,0x20,0x5f,0x34,0x33,0x2e,0x74,
    0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x28,0x5f,0x34,0x33,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,
    0x78,0x2c,0x20,0x5f,0x39,0x33,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,
    0x5f,0x38,0x33,0x2c,0x20,0x5f,0x39,0x33,0x29,0x20,0x7d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,
    0x5b,0x34,0x5d,0x20,0x3d,0x20,0x5f,0x31,0x30,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x30,0x20,0x3d,0x20,0x63,0x6f,0x73,
    0x28,0x5f,0x34,0x33,0x2e,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x34,0x20,0x3d,
    0x20,0x73,0x69,0x6e,0x28,0x5f,0x34,0x33,0x2e,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,
    0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x32,0x78,0x32,0x28,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x28,0x5f,0x31,0x31,0x30,0x2c,0x20,0x2d,0x5f,0x31,0x31,0x34,
    0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x31,0x31,0x34,0x2c,0x20,
    0x5f,0x31,0x31,0x30,0x29,0x29,0x2c,0x20,0x5f,0x31,0x32,0x33,0x5b,0x5f,0x32,0x31,
    0x5b,0x5f,0x32,0x33,0x5d,0x5d,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,
    0x5f,0x34,0x33,0x2e,0x77,0x69,0x64,0x74,0x68,0x2c,0x20,0x5f,0x34,0x33,0x2e,0x68,
    0x65,0x69,0x67,0x68,0x74,0x29,0x29,0x20,0x2b,0x20,0x5f,0x34,0x33,0x2e,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x79,0x2c,0x20,0x5f,0x34,0x33,0x2e,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,
    0x2c,0x20,0x5f,0x31,0x36,0x39,0x5f,0x76,0x70,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x34,0x33,0x2e,0x63,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x5b,0x5f,0x32,0x31,0x5b,0x5f,0x32,0x33,0x5d,0x5d,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,
    0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x20,0x3d,
    0x20,0x69,0x6e,0x74,0x28,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,
    0x2e,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x2e,0x75,0x76,0x20,0x3d,0x20,0x75,0x76,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,
    0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
//
//    Texture2D<float4> tex : register(t0);
//    SamplerState smp : register(s0);
//
//    static float4 frag_color;
//    static float2 uv;
//    static float4 color;
//
//    struct SPIRV_Cross_Input
//    {
//        float4 color : TEXCOORD0;
//        float2 uv : TEXCOORD1;
//    };
//
//    struct SPIRV_Cross_Output
//    {
//        float4 frag_color : SV_Target0;
//    };
//
//    void frag_main()
//    {
//        frag_color = tex.Sample(smp, uv) * color;
//    }
//
//    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
//    {
//        uv = stage_input.uv;
//        color = stage_input.color;
//        frag_main();
//        SPIRV_Cross_Output stage_output;
//        stage_output.frag_color = frag_color;
//        return stage_output;
//    }
//
const fs_source_hlsl5 = [599]u8 {
    0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x3e,0x20,0x74,0x65,0x78,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,
    0x28,0x74,0x30,0x29,0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,
    0x74,0x65,0x20,0x73,0x6d,0x70,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,
    0x72,0x28,0x73,0x30,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x75,0x76,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,
    0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,
    0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,
    0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3a,0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x74,0x65,0x78,0x2e,0x53,0x61,
    0x6d,0x70,0x6c,0x65,0x28,0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,0x20,0x2a,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,
    0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,
    0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x70,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,
    0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,
    0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
//
//    #pragma clang diagnostic ignored "-Wmissing-prototypes"
//    #pragma clang diagnostic ignored "-Wmissing-braces"
//
//    #include <metal_stdlib>
//    #include <simd/simd.h>
//
//    using namespace metal;
//
//    template<typename T, size_t Num>
//    struct spvUnsafeArray
//    {
//        T elements[Num ? Num : 1];
//
//        thread T& operator [] (size_t pos) thread
//        {
//            return elements[pos];
//        }
//        constexpr const thread T& operator [] (size_t pos) const thread
//        {
//            return elements[pos];
//        }
//
//        device T& operator [] (size_t pos) device
//        {
//            return elements[pos];
//        }
//        constexpr const device T& operator [] (size_t pos) const device
//        {
//            return elements[pos];
//        }
//
//        constexpr const constant T& operator [] (size_t pos) const constant
//        {
//            return elements[pos];
//        }
//
//        threadgroup T& operator [] (size_t pos) threadgroup
//        {
//            return elements[pos];
//        }
//        constexpr const threadgroup T& operator [] (size_t pos) const threadgroup
//        {
//            return elements[pos];
//        }
//    };
//
//    struct BatchInstance
//    {
//        float4 position;
//        float width;
//        float height;
//        float rotation;
//        float padding;
//        float4 texcoord;
//        float4 color;
//    };
//
//    struct SSBO
//    {
//        BatchInstance dataBuffer[1];
//    };
//
//    struct vs_params
//    {
//        float4x4 vp;
//    };
//
//    constant spvUnsafeArray<uint, 6> _21 = spvUnsafeArray<uint, 6>({ 0u, 1u, 2u, 3u, 2u, 1u });
//    constant spvUnsafeArray<float2, 4> _123 = spvUnsafeArray<float2, 4>({ float2(0.0), float2(1.0, 0.0), float2(0.0, 1.0), float2(1.0) });
//
//    struct main0_out
//    {
//        float4 color [[user(locn0)]];
//        float2 uv [[user(locn1)]];
//        float4 gl_Position [[position]];
//    };
//
//    vertex main0_out main0(constant vs_params& _169 [[buffer(0)]], const device SSBO& _37 [[buffer(8)]], uint gl_VertexIndex [[vertex_id]])
//    {
//        main0_out out = {};
//        uint _13 = uint(int(gl_VertexIndex));
//        uint _23 = _13 % 6u;
//        uint _40 = _13 / 6u;
//        float _83 = _37.dataBuffer[_40].texcoord.x + _37.dataBuffer[_40].texcoord.z;
//        float _93 = _37.dataBuffer[_40].texcoord.y + _37.dataBuffer[_40].texcoord.w;
//        spvUnsafeArray<float2, 4> _106 = spvUnsafeArray<float2, 4>({ float2(_37.dataBuffer[_40].texcoord.xy), float2(_83, _37.dataBuffer[_40].texcoord.y), float2(_37.dataBuffer[_40].texcoord.x, _93), float2(_83, _93) });
//        spvUnsafeArray<float2, 4> texcoord;
//        texcoord = _106;
//        float _110 = cos(_37.dataBuffer[_40].rotation);
//        float _114 = sin(_37.dataBuffer[_40].rotation);
//        out.gl_Position = _169.vp * float4(((_123[_21[_23]] * float2(_37.dataBuffer[_40].width, _37.dataBuffer[_40].height)) * float2x2(float2(_110, -_114), float2(_114, _110))) + _37.dataBuffer[_40].position.xy, _37.dataBuffer[_40].position.z, 1.0);
//        out.color = _37.dataBuffer[_40].color;
//        out.uv = texcoord[_21[_23]];
//        return out;
//    }
//
//
const vs_source_metal_macos = [2767]u8 {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,
    0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,
    0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,
    0x69,0x6e,0x67,0x2d,0x62,0x72,0x61,0x63,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,
    0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,
    0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,
    0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,
    0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,
    0x61,0x6c,0x3b,0x0a,0x0a,0x74,0x65,0x6d,0x70,0x6c,0x61,0x74,0x65,0x3c,0x74,0x79,
    0x70,0x65,0x6e,0x61,0x6d,0x65,0x20,0x54,0x2c,0x20,0x73,0x69,0x7a,0x65,0x5f,0x74,
    0x20,0x4e,0x75,0x6d,0x3e,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x73,0x70,0x76,
    0x55,0x6e,0x73,0x61,0x66,0x65,0x41,0x72,0x72,0x61,0x79,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x54,0x20,0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x4e,0x75,0x6d,
    0x20,0x3f,0x20,0x4e,0x75,0x6d,0x20,0x3a,0x20,0x31,0x5d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x0a,0x20,0x20,0x20,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x54,0x26,0x20,
    0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,0x20,0x5b,0x5d,0x20,0x28,0x73,0x69,0x7a,
    0x65,0x5f,0x74,0x20,0x70,0x6f,0x73,0x29,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,
    0x73,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,
    0x6e,0x73,0x74,0x65,0x78,0x70,0x72,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x74,0x68,
    0x72,0x65,0x61,0x64,0x20,0x54,0x26,0x20,0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,
    0x20,0x5b,0x5d,0x20,0x28,0x73,0x69,0x7a,0x65,0x5f,0x74,0x20,0x70,0x6f,0x73,0x29,
    0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,0x73,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x0a,0x20,0x20,0x20,
    0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x20,0x54,0x26,0x20,0x6f,0x70,0x65,0x72,0x61,
    0x74,0x6f,0x72,0x20,0x5b,0x5d,0x20,0x28,0x73,0x69,0x7a,0x65,0x5f,0x74,0x20,0x70,
    0x6f,0x73,0x29,0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,0x73,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6e,0x73,0x74,0x65,0x78,
    0x70,0x72,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x20,
    0x54,0x26,0x20,0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,0x20,0x5b,0x5d,0x20,0x28,
    0x73,0x69,0x7a,0x65,0x5f,0x74,0x20,0x70,0x6f,0x73,0x29,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x65,0x6c,
    0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,0x73,0x5d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x65,0x78,0x70,0x72,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x61,0x6e,0x74,0x20,0x54,0x26,0x20,0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,
    0x20,0x5b,0x5d,0x20,0x28,0x73,0x69,0x7a,0x65,0x5f,0x74,0x20,0x70,0x6f,0x73,0x29,
    0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,
    0x73,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x0a,0x20,
    0x20,0x20,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x67,0x72,0x6f,0x75,0x70,0x20,0x54,
    0x26,0x20,0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,0x20,0x5b,0x5d,0x20,0x28,0x73,
    0x69,0x7a,0x65,0x5f,0x74,0x20,0x70,0x6f,0x73,0x29,0x20,0x74,0x68,0x72,0x65,0x61,
    0x64,0x67,0x72,0x6f,0x75,0x70,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x65,0x6c,0x65,0x6d,
    0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,0x73,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6e,0x73,0x74,0x65,0x78,0x70,0x72,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x67,0x72,0x6f,0x75,0x70,
    0x20,0x54,0x26,0x20,0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,0x20,0x5b,0x5d,0x20,
    0x28,0x73,0x69,0x7a,0x65,0x5f,0x74,0x20,0x70,0x6f,0x73,0x29,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x67,0x72,0x6f,0x75,0x70,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,0x73,
    0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x42,0x61,0x74,0x63,0x68,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,
    0x65,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x77,0x69,0x64,0x74,0x68,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x68,0x65,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x64,0x64,0x69,0x6e,
    0x67,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x74,0x65,
    0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x53,0x53,0x42,0x4f,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x42,0x61,0x74,0x63,0x68,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x20,0x64,0x61,
    0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x31,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x76,0x70,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,
    0x74,0x20,0x73,0x70,0x76,0x55,0x6e,0x73,0x61,0x66,0x65,0x41,0x72,0x72,0x61,0x79,
    0x3c,0x75,0x69,0x6e,0x74,0x2c,0x20,0x36,0x3e,0x20,0x5f,0x32,0x31,0x20,0x3d,0x20,
    0x73,0x70,0x76,0x55,0x6e,0x73,0x61,0x66,0x65,0x41,0x72,0x72,0x61,0x79,0x3c,0x75,
    0x69,0x6e,0x74,0x2c,0x20,0x36,0x3e,0x28,0x7b,0x20,0x30,0x75,0x2c,0x20,0x31,0x75,
    0x2c,0x20,0x32,0x75,0x2c,0x20,0x33,0x75,0x2c,0x20,0x32,0x75,0x2c,0x20,0x31,0x75,
    0x20,0x7d,0x29,0x3b,0x0a,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x73,0x70,
    0x76,0x55,0x6e,0x73,0x61,0x66,0x65,0x41,0x72,0x72,0x61,0x79,0x3c,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x2c,0x20,0x34,0x3e,0x20,0x5f,0x31,0x32,0x33,0x20,0x3d,0x20,0x73,
    0x70,0x76,0x55,0x6e,0x73,0x61,0x66,0x65,0x41,0x72,0x72,0x61,0x79,0x3c,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x2c,0x20,0x34,0x3e,0x28,0x7b,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x31,
    0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,
    0x28,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x28,0x31,0x2e,0x30,0x29,0x20,0x7d,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x75,0x76,0x20,
    0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x28,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x36,0x39,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,
    0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x64,
    0x65,0x76,0x69,0x63,0x65,0x20,0x53,0x53,0x42,0x4f,0x26,0x20,0x5f,0x33,0x37,0x20,
    0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x38,0x29,0x5d,0x5d,0x2c,0x20,0x75,
    0x69,0x6e,0x74,0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,
    0x65,0x78,0x20,0x5b,0x5b,0x76,0x65,0x72,0x74,0x65,0x78,0x5f,0x69,0x64,0x5d,0x5d,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,
    0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x75,0x69,0x6e,0x74,0x20,0x5f,0x31,0x33,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,
    0x69,0x6e,0x74,0x28,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,
    0x65,0x78,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,
    0x32,0x33,0x20,0x3d,0x20,0x5f,0x31,0x33,0x20,0x25,0x20,0x36,0x75,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x34,0x30,0x20,0x3d,0x20,0x5f,0x31,
    0x33,0x20,0x2f,0x20,0x36,0x75,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x38,0x33,0x20,0x3d,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,
    0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x2e,0x78,0x20,0x2b,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,
    0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x39,0x33,0x20,0x3d,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,
    0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x20,0x2b,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,
    0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,
    0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x70,
    0x76,0x55,0x6e,0x73,0x61,0x66,0x65,0x41,0x72,0x72,0x61,0x79,0x3c,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x2c,0x20,0x34,0x3e,0x20,0x5f,0x31,0x30,0x36,0x20,0x3d,0x20,0x73,
    0x70,0x76,0x55,0x6e,0x73,0x61,0x66,0x65,0x41,0x72,0x72,0x61,0x79,0x3c,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x2c,0x20,0x34,0x3e,0x28,0x7b,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,
    0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,
    0x79,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x38,0x33,0x2c,0x20,
    0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,
    0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x29,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,
    0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x2e,0x78,0x2c,0x20,0x5f,0x39,0x33,0x29,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x28,0x5f,0x38,0x33,0x2c,0x20,0x5f,0x39,0x33,0x29,0x20,0x7d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x70,0x76,0x55,0x6e,0x73,0x61,0x66,0x65,
    0x41,0x72,0x72,0x61,0x79,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x32,0x2c,0x20,0x34,0x3e,
    0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,
    0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x5f,0x31,0x30,0x36,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x30,0x20,0x3d,
    0x20,0x63,0x6f,0x73,0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,
    0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,
    0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,
    0x31,0x34,0x20,0x3d,0x20,0x73,0x69,0x6e,0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,
    0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x72,0x6f,0x74,
    0x61,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x31,
    0x36,0x39,0x2e,0x76,0x70,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x28,
    0x28,0x5f,0x31,0x32,0x33,0x5b,0x5f,0x32,0x31,0x5b,0x5f,0x32,0x33,0x5d,0x5d,0x20,
    0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,
    0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x77,0x69,0x64,
    0x74,0x68,0x2c,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,
    0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x68,0x65,0x69,0x67,0x68,0x74,0x29,0x29,
    0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x78,0x32,0x28,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x28,0x5f,0x31,0x31,0x30,0x2c,0x20,0x2d,0x5f,0x31,0x31,0x34,0x29,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x31,0x31,0x34,0x2c,0x20,0x5f,0x31,
    0x31,0x30,0x29,0x29,0x29,0x20,0x2b,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,0x61,
    0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x2e,0x78,0x79,0x2c,0x20,0x5f,0x33,0x37,0x2e,0x64,0x61,0x74,
    0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,0x30,0x5d,0x2e,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,
    0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x5f,0x34,
    0x30,0x5d,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,
    0x74,0x2e,0x75,0x76,0x20,0x3d,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x5b,
    0x5f,0x32,0x31,0x5b,0x5f,0x32,0x33,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #include <metal_stdlib>
//    #include <simd/simd.h>
//
//    using namespace metal;
//
//    struct main0_out
//    {
//        float4 frag_color [[color(0)]];
//    };
//
//    struct main0_in
//    {
//        float4 color [[user(locn0)]];
//        float2 uv [[user(locn1)]];
//    };
//
//    fragment main0_out main0(main0_in in [[stage_in]], texture2d<float> tex [[texture(0)]], sampler smp [[sampler(0)]])
//    {
//        main0_out out = {};
//        out.frag_color = tex.sample(smp, in.uv) * in.color;
//        return out;
//    }
//
//
const fs_source_metal_macos = [436]u8 {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x75,0x76,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,
    0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,
    0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,
    0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x74,0x65,
    0x78,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,0x5d,
    0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x73,0x6d,0x70,0x20,0x5b,0x5b,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,
    0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x74,0x65,0x78,
    0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x73,0x6d,0x70,0x2c,0x20,0x69,0x6e,0x2e,
    0x75,0x76,0x29,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
};
//
//    diagnostic(off, derivative_uniformity);
//
//    struct BatchInstance {
//      position : vec4f,
//      width : f32,
//      height : f32,
//      rotation : f32,
//      padding : f32,
//      texcoord : vec4f,
//      color : vec4f,
//    }
//
//    struct BatchInstance_1 {
//      /_ @offset(0) _/
//      position : vec4f,
//      /_ @offset(16) _/
//      width : f32,
//      /_ @offset(20) _/
//      height : f32,
//      /_ @offset(24) _/
//      rotation : f32,
//      /_ @offset(28) _/
//      padding : f32,
//      /_ @offset(32) _/
//      texcoord : vec4f,
//      /_ @offset(48) _/
//      color : vec4f,
//    }
//
//    alias RTArr = array<BatchInstance_1>;
//
//    struct SSBO {
//      /_ @offset(0) _/
//      dataBuffer : RTArr,
//    }
//
//    struct vs_params {
//      /_ @offset(0) _/
//      vp : mat4x4f,
//    }
//
//    var<private> gl_VertexIndex : i32;
//
//    @group(1) @binding(32) var<storage, read> x_37 : SSBO;
//
//    @group(0) @binding(0) var<uniform> x_169 : vs_params;
//
//    var<private> color : vec4f;
//
//    var<private> uv : vec2f;
//
//    var<private> gl_Position : vec4f;
//
//    fn main_1() {
//      var VertexIndex : u32;
//      var vert : u32;
//      var indexable : array<u32, 6u>;
//      var sprite : BatchInstance;
//      var uvwh : vec4f;
//      var texcoord : array<vec2f, 4u>;
//      var c : f32;
//      var s : f32;
//      var coord : vec2f;
//      var indexable_1 : array<vec2f, 4u>;
//      var rotation : mat2x2f;
//      var coordWithDepth : vec3f;
//      let x_12 : i32 = gl_VertexIndex;
//      VertexIndex = bitcast<u32>(x_12);
//      let x_22 : u32 = VertexIndex;
//      indexable = array<u32, 6u>(0u, 1u, 2u, 3u, 2u, 1u);
//      let x_27 : u32 = indexable[(x_22 % 6u)];
//      vert = x_27;
//      let x_39 : u32 = VertexIndex;
//      let x_43 : BatchInstance_1 = x_37.dataBuffer[(x_39 / 6u)];
//      sprite.position = x_43.position;
//      sprite.width = x_43.width;
//      sprite.height = x_43.height;
//      sprite.rotation = x_43.rotation;
//      sprite.padding = x_43.padding;
//      sprite.texcoord = x_43.texcoord;
//      sprite.color = x_43.color;
//      let x_68 : vec4f = sprite.texcoord;
//      uvwh = x_68;
//      let x_75 : f32 = uvwh.x;
//      let x_77 : f32 = uvwh.y;
//      let x_80 : f32 = uvwh.x;
//      let x_82 : f32 = uvwh.z;
//      let x_85 : f32 = uvwh.y;
//      let x_88 : f32 = uvwh.x;
//      let x_90 : f32 = uvwh.y;
//      let x_92 : f32 = uvwh.w;
//      let x_96 : f32 = uvwh.x;
//      let x_98 : f32 = uvwh.z;
//      let x_101 : f32 = uvwh.y;
//      let x_103 : f32 = uvwh.w;
//      texcoord = array<vec2f, 4u>(vec2f(x_75, x_77), vec2f((x_80 + x_82), x_85), vec2f(x_88, (x_90 + x_92)), vec2f((x_96 + x_98), (x_101 + x_103)));
//      let x_109 : f32 = sprite.rotation;
//      c = cos(x_109);
//      let x_113 : f32 = sprite.rotation;
//      s = sin(x_113);
//      let x_124 : u32 = vert;
//      indexable_1 = array<vec2f, 4u>(vec2f(0.0f, 0.0f), vec2f(1.0f, 0.0f), vec2f(0.0f, 1.0f), vec2f(1.0f, 1.0f));
//      let x_127 : vec2f = indexable_1[x_124];
//      coord = x_127;
//      let x_129 : f32 = sprite.width;
//      let x_131 : f32 = sprite.height;
//      let x_133 : vec2f = coord;
//      coord = (x_133 * vec2f(x_129, x_131));
//      let x_138 : f32 = c;
//      let x_139 : f32 = s;
//      let x_141 : f32 = s;
//      let x_142 : f32 = c;
//      rotation = mat2x2f(vec2f(x_138, -(x_139)), vec2f(x_141, x_142));
//      let x_146 : vec2f = coord;
//      let x_147 : mat2x2f = rotation;
//      coord = (x_146 * x_147);
//      let x_152 : vec2f = coord;
//      let x_154 : vec4f = sprite.position;
//      let x_156 : vec2f = (x_152 + vec2f(x_154.x, x_154.y));
//      let x_158 : f32 = sprite.position.z;
//      coordWithDepth = vec3f(x_156.x, x_156.y, x_158);
//      let x_172 : mat4x4f = x_169.vp;
//      let x_173 : vec3f = coordWithDepth;
//      gl_Position = (x_172 * vec4f(x_173.x, x_173.y, x_173.z, 1.0f));
//      let x_183 : vec4f = sprite.color;
//      color = x_183;
//      let x_186 : u32 = vert;
//      let x_188 : vec2f = texcoord[x_186];
//      uv = x_188;
//      return;
//    }
//
//    struct main_out {
//      @builtin(position)
//      gl_Position : vec4f,
//      @location(0)
//      color_1 : vec4f,
//      @location(1)
//      uv_1 : vec2f,
//    }
//
//    @vertex
//    fn main(@builtin(vertex_index) gl_VertexIndex_param : u32) -> main_out {
//      gl_VertexIndex = bitcast<i32>(gl_VertexIndex_param);
//      main_1();
//      return main_out(gl_Position, color, uv);
//    }
//
//
const vs_source_wgsl = [3767]u8 {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x42,0x61,0x74,0x63,0x68,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x20,0x7b,0x0a,
    0x20,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x34,0x66,0x2c,0x0a,0x20,0x20,0x77,0x69,0x64,0x74,0x68,0x20,0x3a,0x20,0x66,0x33,
    0x32,0x2c,0x0a,0x20,0x20,0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x3a,0x20,0x66,0x33,
    0x32,0x2c,0x0a,0x20,0x20,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x2c,0x0a,0x20,0x20,0x70,0x61,0x64,0x64,0x69,0x6e,0x67,0x20,0x3a,
    0x20,0x66,0x33,0x32,0x2c,0x0a,0x20,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x42,0x61,0x74,0x63,0x68,0x49,0x6e,0x73,0x74,0x61,0x6e,
    0x63,0x65,0x5f,0x31,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,
    0x73,0x65,0x74,0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,
    0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x31,0x36,0x29,0x20,0x2a,
    0x2f,0x0a,0x20,0x20,0x77,0x69,0x64,0x74,0x68,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,
    0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x32,0x30,
    0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x32,0x34,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x72,0x6f,0x74,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,
    0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x32,0x38,0x29,0x20,0x2a,0x2f,0x0a,0x20,
    0x20,0x70,0x61,0x64,0x64,0x69,0x6e,0x67,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x0a,
    0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x33,0x32,0x29,
    0x20,0x2a,0x2f,0x0a,0x20,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,
    0x66,0x73,0x65,0x74,0x28,0x34,0x38,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,
    0x61,0x6c,0x69,0x61,0x73,0x20,0x52,0x54,0x41,0x72,0x72,0x20,0x3d,0x20,0x61,0x72,
    0x72,0x61,0x79,0x3c,0x42,0x61,0x74,0x63,0x68,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,
    0x65,0x5f,0x31,0x3e,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x53,
    0x42,0x4f,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x64,0x61,0x74,0x61,0x42,0x75,
    0x66,0x66,0x65,0x72,0x20,0x3a,0x20,0x52,0x54,0x41,0x72,0x72,0x2c,0x0a,0x7d,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x76,0x70,0x20,0x3a,0x20,0x6d,0x61,
    0x74,0x34,0x78,0x34,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,
    0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,
    0x49,0x6e,0x64,0x65,0x78,0x20,0x3a,0x20,0x69,0x33,0x32,0x3b,0x0a,0x0a,0x40,0x67,
    0x72,0x6f,0x75,0x70,0x28,0x31,0x29,0x20,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,
    0x28,0x33,0x32,0x29,0x20,0x76,0x61,0x72,0x3c,0x73,0x74,0x6f,0x72,0x61,0x67,0x65,
    0x2c,0x20,0x72,0x65,0x61,0x64,0x3e,0x20,0x78,0x5f,0x33,0x37,0x20,0x3a,0x20,0x53,
    0x53,0x42,0x4f,0x3b,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x30,0x29,0x20,
    0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x30,0x29,0x20,0x76,0x61,0x72,0x3c,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x3e,0x20,0x78,0x5f,0x31,0x36,0x39,0x20,0x3a,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x3b,0x0a,0x0a,0x76,0x61,0x72,
    0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,
    0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x75,0x76,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,
    0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,
    0x28,0x29,0x20,0x7b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x56,0x65,0x72,0x74,0x65,
    0x78,0x49,0x6e,0x64,0x65,0x78,0x20,0x3a,0x20,0x75,0x33,0x32,0x3b,0x0a,0x20,0x20,
    0x76,0x61,0x72,0x20,0x76,0x65,0x72,0x74,0x20,0x3a,0x20,0x75,0x33,0x32,0x3b,0x0a,
    0x20,0x20,0x76,0x61,0x72,0x20,0x69,0x6e,0x64,0x65,0x78,0x61,0x62,0x6c,0x65,0x20,
    0x3a,0x20,0x61,0x72,0x72,0x61,0x79,0x3c,0x75,0x33,0x32,0x2c,0x20,0x36,0x75,0x3e,
    0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x20,0x3a,
    0x20,0x42,0x61,0x74,0x63,0x68,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x3b,0x0a,
    0x20,0x20,0x76,0x61,0x72,0x20,0x75,0x76,0x77,0x68,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x34,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,
    0x72,0x64,0x20,0x3a,0x20,0x61,0x72,0x72,0x61,0x79,0x3c,0x76,0x65,0x63,0x32,0x66,
    0x2c,0x20,0x34,0x75,0x3e,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x20,0x3a,
    0x20,0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x73,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x6f,0x6f,0x72,0x64,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,
    0x69,0x6e,0x64,0x65,0x78,0x61,0x62,0x6c,0x65,0x5f,0x31,0x20,0x3a,0x20,0x61,0x72,
    0x72,0x61,0x79,0x3c,0x76,0x65,0x63,0x32,0x66,0x2c,0x20,0x34,0x75,0x3e,0x3b,0x0a,
    0x20,0x20,0x76,0x61,0x72,0x20,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3a,
    0x20,0x6d,0x61,0x74,0x32,0x78,0x32,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,
    0x63,0x6f,0x6f,0x72,0x64,0x57,0x69,0x74,0x68,0x44,0x65,0x70,0x74,0x68,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x31,0x32,0x20,0x3a,0x20,0x69,0x33,0x32,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x56,0x65,
    0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x20,0x20,0x56,0x65,0x72,
    0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x20,0x3d,0x20,0x62,0x69,0x74,0x63,0x61,
    0x73,0x74,0x3c,0x75,0x33,0x32,0x3e,0x28,0x78,0x5f,0x31,0x32,0x29,0x3b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x32,0x20,0x3a,0x20,0x75,0x33,0x32,0x20,
    0x3d,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x20,
    0x20,0x69,0x6e,0x64,0x65,0x78,0x61,0x62,0x6c,0x65,0x20,0x3d,0x20,0x61,0x72,0x72,
    0x61,0x79,0x3c,0x75,0x33,0x32,0x2c,0x20,0x36,0x75,0x3e,0x28,0x30,0x75,0x2c,0x20,
    0x31,0x75,0x2c,0x20,0x32,0x75,0x2c,0x20,0x33,0x75,0x2c,0x20,0x32,0x75,0x2c,0x20,
    0x31,0x75,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x37,0x20,
    0x3a,0x20,0x75,0x33,0x32,0x20,0x3d,0x20,0x69,0x6e,0x64,0x65,0x78,0x61,0x62,0x6c,
    0x65,0x5b,0x28,0x78,0x5f,0x32,0x32,0x20,0x25,0x20,0x36,0x75,0x29,0x5d,0x3b,0x0a,
    0x20,0x20,0x76,0x65,0x72,0x74,0x20,0x3d,0x20,0x78,0x5f,0x32,0x37,0x3b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x33,0x39,0x20,0x3a,0x20,0x75,0x33,0x32,0x20,
    0x3d,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x34,0x33,0x20,0x3a,0x20,0x42,0x61,0x74,0x63,
    0x68,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x31,0x20,0x3d,0x20,0x78,0x5f,
    0x33,0x37,0x2e,0x64,0x61,0x74,0x61,0x42,0x75,0x66,0x66,0x65,0x72,0x5b,0x28,0x78,
    0x5f,0x33,0x39,0x20,0x2f,0x20,0x36,0x75,0x29,0x5d,0x3b,0x0a,0x20,0x20,0x73,0x70,
    0x72,0x69,0x74,0x65,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x78,0x5f,0x34,0x33,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,
    0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x2e,0x77,0x69,0x64,0x74,0x68,0x20,0x3d,0x20,
    0x78,0x5f,0x34,0x33,0x2e,0x77,0x69,0x64,0x74,0x68,0x3b,0x0a,0x20,0x20,0x73,0x70,
    0x72,0x69,0x74,0x65,0x2e,0x68,0x65,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x78,0x5f,
    0x34,0x33,0x2e,0x68,0x65,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,0x73,0x70,0x72,
    0x69,0x74,0x65,0x2e,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x78,
    0x5f,0x34,0x33,0x2e,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,
    0x73,0x70,0x72,0x69,0x74,0x65,0x2e,0x70,0x61,0x64,0x64,0x69,0x6e,0x67,0x20,0x3d,
    0x20,0x78,0x5f,0x34,0x33,0x2e,0x70,0x61,0x64,0x64,0x69,0x6e,0x67,0x3b,0x0a,0x20,
    0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,
    0x20,0x3d,0x20,0x78,0x5f,0x34,0x33,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,
    0x3b,0x0a,0x20,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x2e,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x78,0x5f,0x34,0x33,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x36,0x38,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,
    0x66,0x20,0x3d,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x2e,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x75,0x76,0x77,0x68,0x20,0x3d,0x20,0x78,0x5f,
    0x36,0x38,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x35,0x20,0x3a,
    0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x75,0x76,0x77,0x68,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x37,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,
    0x3d,0x20,0x75,0x76,0x77,0x68,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x38,0x30,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x75,0x76,0x77,
    0x68,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x38,0x32,0x20,
    0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x75,0x76,0x77,0x68,0x2e,0x7a,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x38,0x35,0x20,0x3a,0x20,0x66,0x33,0x32,
    0x20,0x3d,0x20,0x75,0x76,0x77,0x68,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x38,0x38,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x75,0x76,
    0x77,0x68,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x39,0x30,
    0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x75,0x76,0x77,0x68,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x39,0x32,0x20,0x3a,0x20,0x66,0x33,
    0x32,0x20,0x3d,0x20,0x75,0x76,0x77,0x68,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x39,0x36,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x75,
    0x76,0x77,0x68,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x39,
    0x38,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x75,0x76,0x77,0x68,0x2e,0x7a,
    0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x30,0x31,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x20,0x3d,0x20,0x75,0x76,0x77,0x68,0x2e,0x79,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x30,0x33,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,
    0x3d,0x20,0x75,0x76,0x77,0x68,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x61,0x72,0x72,0x61,0x79,0x3c,0x76,0x65,0x63,
    0x32,0x66,0x2c,0x20,0x34,0x75,0x3e,0x28,0x76,0x65,0x63,0x32,0x66,0x28,0x78,0x5f,
    0x37,0x35,0x2c,0x20,0x78,0x5f,0x37,0x37,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x66,
    0x28,0x28,0x78,0x5f,0x38,0x30,0x20,0x2b,0x20,0x78,0x5f,0x38,0x32,0x29,0x2c,0x20,
    0x78,0x5f,0x38,0x35,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x66,0x28,0x78,0x5f,0x38,
    0x38,0x2c,0x20,0x28,0x78,0x5f,0x39,0x30,0x20,0x2b,0x20,0x78,0x5f,0x39,0x32,0x29,
    0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x66,0x28,0x28,0x78,0x5f,0x39,0x36,0x20,0x2b,
    0x20,0x78,0x5f,0x39,0x38,0x29,0x2c,0x20,0x28,0x78,0x5f,0x31,0x30,0x31,0x20,0x2b,
    0x20,0x78,0x5f,0x31,0x30,0x33,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x31,0x30,0x39,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x73,
    0x70,0x72,0x69,0x74,0x65,0x2e,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x20,0x20,0x63,0x20,0x3d,0x20,0x63,0x6f,0x73,0x28,0x78,0x5f,0x31,0x30,0x39,0x29,
    0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x31,0x33,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x20,0x3d,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x2e,0x72,0x6f,0x74,
    0x61,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x73,0x20,0x3d,0x20,0x73,0x69,0x6e,
    0x28,0x78,0x5f,0x31,0x31,0x33,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x31,0x32,0x34,0x20,0x3a,0x20,0x75,0x33,0x32,0x20,0x3d,0x20,0x76,0x65,0x72,
    0x74,0x3b,0x0a,0x20,0x20,0x69,0x6e,0x64,0x65,0x78,0x61,0x62,0x6c,0x65,0x5f,0x31,
    0x20,0x3d,0x20,0x61,0x72,0x72,0x61,0x79,0x3c,0x76,0x65,0x63,0x32,0x66,0x2c,0x20,
    0x34,0x75,0x3e,0x28,0x76,0x65,0x63,0x32,0x66,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,
    0x30,0x2e,0x30,0x66,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x66,0x28,0x31,0x2e,0x30,
    0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x66,0x28,
    0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x76,0x65,0x63,
    0x32,0x66,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x32,0x37,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x69,0x6e,0x64,0x65,0x78,0x61,0x62,0x6c,0x65,
    0x5f,0x31,0x5b,0x78,0x5f,0x31,0x32,0x34,0x5d,0x3b,0x0a,0x20,0x20,0x63,0x6f,0x6f,
    0x72,0x64,0x20,0x3d,0x20,0x78,0x5f,0x31,0x32,0x37,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x31,0x32,0x39,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,
    0x73,0x70,0x72,0x69,0x74,0x65,0x2e,0x77,0x69,0x64,0x74,0x68,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x33,0x31,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,
    0x3d,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x2e,0x68,0x65,0x69,0x67,0x68,0x74,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x33,0x33,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,
    0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x28,0x78,0x5f,0x31,0x33,0x33,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x32,0x66,0x28,0x78,0x5f,0x31,0x32,0x39,0x2c,0x20,0x78,0x5f,
    0x31,0x33,0x31,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,
    0x33,0x38,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x63,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x33,0x39,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,
    0x3d,0x20,0x73,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x34,0x31,
    0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x73,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x31,0x34,0x32,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,
    0x63,0x3b,0x0a,0x20,0x20,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x6d,0x61,0x74,0x32,0x78,0x32,0x66,0x28,0x76,0x65,0x63,0x32,0x66,0x28,0x78,0x5f,
    0x31,0x33,0x38,0x2c,0x20,0x2d,0x28,0x78,0x5f,0x31,0x33,0x39,0x29,0x29,0x2c,0x20,
    0x76,0x65,0x63,0x32,0x66,0x28,0x78,0x5f,0x31,0x34,0x31,0x2c,0x20,0x78,0x5f,0x31,
    0x34,0x32,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x34,
    0x36,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x63,0x6f,0x6f,0x72,
    0x64,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x34,0x37,0x20,0x3a,
    0x20,0x6d,0x61,0x74,0x32,0x78,0x32,0x66,0x20,0x3d,0x20,0x72,0x6f,0x74,0x61,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x28,
    0x78,0x5f,0x31,0x34,0x36,0x20,0x2a,0x20,0x78,0x5f,0x31,0x34,0x37,0x29,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x35,0x32,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x32,0x66,0x20,0x3d,0x20,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x31,0x35,0x34,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,
    0x20,0x3d,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x35,0x36,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x28,0x78,0x5f,0x31,0x35,0x32,
    0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x66,0x28,0x78,0x5f,0x31,0x35,0x34,0x2e,0x78,
    0x2c,0x20,0x78,0x5f,0x31,0x35,0x34,0x2e,0x79,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x31,0x35,0x38,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,
    0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x63,0x6f,0x6f,0x72,0x64,0x57,0x69,0x74,0x68,0x44,
    0x65,0x70,0x74,0x68,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x78,0x5f,0x31,
    0x35,0x36,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x31,0x35,0x36,0x2e,0x79,0x2c,0x20,0x78,
    0x5f,0x31,0x35,0x38,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,
    0x37,0x32,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,0x34,0x66,0x20,0x3d,0x20,0x78,
    0x5f,0x31,0x36,0x39,0x2e,0x76,0x70,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x31,0x37,0x33,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x63,
    0x6f,0x6f,0x72,0x64,0x57,0x69,0x74,0x68,0x44,0x65,0x70,0x74,0x68,0x3b,0x0a,0x20,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,
    0x78,0x5f,0x31,0x37,0x32,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x66,0x28,0x78,0x5f,
    0x31,0x37,0x33,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x31,0x37,0x33,0x2e,0x79,0x2c,0x20,
    0x78,0x5f,0x31,0x37,0x33,0x2e,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x38,0x33,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x2e,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x78,
    0x5f,0x31,0x38,0x33,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x38,
    0x36,0x20,0x3a,0x20,0x75,0x33,0x32,0x20,0x3d,0x20,0x76,0x65,0x72,0x74,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x38,0x38,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x32,0x66,0x20,0x3d,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x5b,0x78,
    0x5f,0x31,0x38,0x36,0x5d,0x3b,0x0a,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x78,0x5f,
    0x31,0x38,0x38,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,
    0x74,0x20,0x7b,0x0a,0x20,0x20,0x40,0x62,0x75,0x69,0x6c,0x74,0x69,0x6e,0x28,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,
    0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x0a,0x20,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,
    0x2c,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x31,0x29,
    0x0a,0x20,0x20,0x75,0x76,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x2c,
    0x0a,0x7d,0x0a,0x0a,0x40,0x76,0x65,0x72,0x74,0x65,0x78,0x0a,0x66,0x6e,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x40,0x62,0x75,0x69,0x6c,0x74,0x69,0x6e,0x28,0x76,0x65,0x72,
    0x74,0x65,0x78,0x5f,0x69,0x6e,0x64,0x65,0x78,0x29,0x20,0x67,0x6c,0x5f,0x56,0x65,
    0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,
    0x3a,0x20,0x75,0x33,0x32,0x29,0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,
    0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,
    0x49,0x6e,0x64,0x65,0x78,0x20,0x3d,0x20,0x62,0x69,0x74,0x63,0x61,0x73,0x74,0x3c,
    0x69,0x33,0x32,0x3e,0x28,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,
    0x64,0x65,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x6d,0x61,
    0x69,0x6e,0x5f,0x31,0x28,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x28,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x75,0x76,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    diagnostic(off, derivative_uniformity);
//
//    var<private> frag_color : vec4f;
//
//    @group(1) @binding(64) var tex : texture_2d<f32>;
//
//    @group(1) @binding(80) var smp : sampler;
//
//    var<private> uv : vec2f;
//
//    var<private> color : vec4f;
//
//    fn main_1() {
//      let x_23 : vec2f = uv;
//      let x_24 : vec4f = textureSample(tex, smp, x_23);
//      let x_27 : vec4f = color;
//      frag_color = (x_24 * x_27);
//      return;
//    }
//
//    struct main_out {
//      @location(0)
//      frag_color_1 : vec4f,
//    }
//
//    @fragment
//    fn main(@location(1) uv_param : vec2f, @location(0) color_param : vec4f) -> main_out {
//      uv = uv_param;
//      color = color_param;
//      main_1();
//      return main_out(frag_color);
//    }
//
//
const fs_source_wgsl = [630]u8 {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,
    0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,
    0x70,0x28,0x31,0x29,0x20,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x36,0x34,
    0x29,0x20,0x76,0x61,0x72,0x20,0x74,0x65,0x78,0x20,0x3a,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x32,0x64,0x3c,0x66,0x33,0x32,0x3e,0x3b,0x0a,0x0a,0x40,0x67,
    0x72,0x6f,0x75,0x70,0x28,0x31,0x29,0x20,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,
    0x28,0x38,0x30,0x29,0x20,0x76,0x61,0x72,0x20,0x73,0x6d,0x70,0x20,0x3a,0x20,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,
    0x76,0x61,0x74,0x65,0x3e,0x20,0x75,0x76,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,
    0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,
    0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x33,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,
    0x20,0x3d,0x20,0x75,0x76,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,
    0x34,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x74,0x65,0x78,0x2c,0x20,0x73,
    0x6d,0x70,0x2c,0x20,0x78,0x5f,0x32,0x33,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x32,0x37,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x20,0x3d,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x78,0x5f,0x32,0x34,0x20,0x2a,0x20,0x78,0x5f,
    0x32,0x37,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,
    0x74,0x20,0x7b,0x0a,0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,
    0x30,0x29,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,
    0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,0x40,0x66,
    0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x31,0x29,0x20,0x75,0x76,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x2c,0x20,0x40,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x29,
    0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,
    0x20,0x75,0x76,0x20,0x3d,0x20,0x75,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,
    0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,
    0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x69,0x6e,
    0x5f,0x6f,0x75,0x74,0x28,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
pub fn batchShaderDesc(backend: sg.Backend) sg.ShaderDesc {
    var desc: sg.ShaderDesc = .{};
    desc.label = "batch_shader";
    switch (backend) {
        .GLCORE => {
            desc.vertex_func.source = &vs_source_glsl410;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = &fs_source_glsl410;
            desc.fragment_func.entry = "main";
            desc.uniform_blocks[0].stage = .VERTEX;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].glsl_uniforms[0].type = .FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 4;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.storage_buffers[0].stage = .VERTEX;
            desc.storage_buffers[0].readonly = true;
            desc.storage_buffers[0].glsl_binding_n = 0;
            desc.images[0].stage = .FRAGMENT;
            desc.images[0].multisampled = false;
            desc.images[0].image_type = ._2D;
            desc.images[0].sample_type = .FLOAT;
            desc.samplers[0].stage = .FRAGMENT;
            desc.samplers[0].sampler_type = .FILTERING;
            desc.image_sampler_pairs[0].stage = .FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "tex_smp";
        },
        .GLES3 => {
            desc.vertex_func.source = &vs_source_glsl300es;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = &fs_source_glsl300es;
            desc.fragment_func.entry = "main";
            desc.uniform_blocks[0].stage = .VERTEX;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].glsl_uniforms[0].type = .FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 4;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.storage_buffers[0].stage = .VERTEX;
            desc.storage_buffers[0].readonly = true;
            desc.storage_buffers[0].glsl_binding_n = 0;
            desc.images[0].stage = .FRAGMENT;
            desc.images[0].multisampled = false;
            desc.images[0].image_type = ._2D;
            desc.images[0].sample_type = .FLOAT;
            desc.samplers[0].stage = .FRAGMENT;
            desc.samplers[0].sampler_type = .FILTERING;
            desc.image_sampler_pairs[0].stage = .FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "tex_smp";
        },
        .D3D11 => {
            desc.vertex_func.source = &vs_source_hlsl5;
            desc.vertex_func.d3d11_target = "vs_5_0";
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = &fs_source_hlsl5;
            desc.fragment_func.d3d11_target = "ps_5_0";
            desc.fragment_func.entry = "main";
            desc.uniform_blocks[0].stage = .VERTEX;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].hlsl_register_b_n = 0;
            desc.storage_buffers[0].stage = .VERTEX;
            desc.storage_buffers[0].readonly = true;
            desc.storage_buffers[0].hlsl_register_t_n = 16;
            desc.images[0].stage = .FRAGMENT;
            desc.images[0].multisampled = false;
            desc.images[0].image_type = ._2D;
            desc.images[0].sample_type = .FLOAT;
            desc.images[0].hlsl_register_t_n = 0;
            desc.samplers[0].stage = .FRAGMENT;
            desc.samplers[0].sampler_type = .FILTERING;
            desc.samplers[0].hlsl_register_s_n = 0;
            desc.image_sampler_pairs[0].stage = .FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
        },
        .METAL_MACOS => {
            desc.vertex_func.source = &vs_source_metal_macos;
            desc.vertex_func.entry = "main0";
            desc.fragment_func.source = &fs_source_metal_macos;
            desc.fragment_func.entry = "main0";
            desc.uniform_blocks[0].stage = .VERTEX;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].msl_buffer_n = 0;
            desc.storage_buffers[0].stage = .VERTEX;
            desc.storage_buffers[0].readonly = true;
            desc.storage_buffers[0].msl_buffer_n = 8;
            desc.images[0].stage = .FRAGMENT;
            desc.images[0].multisampled = false;
            desc.images[0].image_type = ._2D;
            desc.images[0].sample_type = .FLOAT;
            desc.images[0].msl_texture_n = 0;
            desc.samplers[0].stage = .FRAGMENT;
            desc.samplers[0].sampler_type = .FILTERING;
            desc.samplers[0].msl_sampler_n = 0;
            desc.image_sampler_pairs[0].stage = .FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
        },
        .WGPU => {
            desc.vertex_func.source = &vs_source_wgsl;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = &fs_source_wgsl;
            desc.fragment_func.entry = "main";
            desc.uniform_blocks[0].stage = .VERTEX;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].wgsl_group0_binding_n = 0;
            desc.storage_buffers[0].stage = .VERTEX;
            desc.storage_buffers[0].readonly = true;
            desc.storage_buffers[0].wgsl_group1_binding_n = 32;
            desc.images[0].stage = .FRAGMENT;
            desc.images[0].multisampled = false;
            desc.images[0].image_type = ._2D;
            desc.images[0].sample_type = .FLOAT;
            desc.images[0].wgsl_group1_binding_n = 64;
            desc.samplers[0].stage = .FRAGMENT;
            desc.samplers[0].sampler_type = .FILTERING;
            desc.samplers[0].wgsl_group1_binding_n = 80;
            desc.image_sampler_pairs[0].stage = .FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
        },
        else => {},
    }
    return desc;
}
pub fn batchAttrSlot(attr_name: []const u8) ?usize {
    _ = attr_name;
    return null;
}
pub fn batchImageSlot(img_name: []const u8) ?usize {
    if (std.mem.eql(u8, img_name, "tex")) {
        return 0;
    }
    return null;
}
pub fn batchSamplerSlot(smp_name: []const u8) ?usize {
    if (std.mem.eql(u8, smp_name, "smp")) {
        return 0;
    }
    return null;
}
pub fn batchUniformblockSlot(ub_name: []const u8) ?usize {
    if (std.mem.eql(u8, ub_name, "vs_params")) {
        return 0;
    }
    return null;
}
pub fn batchUniformblockSize(ub_name: []const u8) ?usize {
    if (std.mem.eql(u8, ub_name, "vs_params")) {
        return @sizeOf(VsParams);
    }
    return null;
}
pub fn batchUniformOffset(ub_name: []const u8, u_name: []const u8) ?usize {
    if (std.mem.eql(u8, ub_name, "vs_params")) {
        if (std.mem.eql(u8, u_name, "vp")) {
            return 0;
        }
    }
    return null;
}
pub fn batchUniformDesc(ub_name: []const u8, u_name: []const u8) ?sg.GlslShaderUniform {
    if (std.mem.eql(u8, ub_name, "vs_params")) {
        if (std.mem.eql(u8, u_name, "vp")) {
            var desc: sg.GlslShaderUniform = .{};
            desc.type = .MAT4;
            desc.array_count = 0;
            desc.glsl_name = "vp";
            return desc;
        }
    }
    return null;
}
pub fn batchStoragebufferSlot(sbuf_name: []const u8) ?usize {
    if (std.mem.eql(u8, sbuf_name, "SSBO")) {
        return 0;
    }
    return null;
}
